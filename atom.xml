<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[iYouger]]></title>
  <link href="http://youger.github.io/atom.xml" rel="self"/>
  <link href="http://youger.github.io/"/>
  <updated>2014-06-16T10:30:01+08:00</updated>
  <id>http://youger.github.io/</id>
  <author>
    <name><![CDATA[youger]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Apache+MySQL+PHP +codeigniter 模拟与服务器的交互]]></title>
    <link href="http://youger.github.io/blog/2014/04/20/apache-plus-mysql-plus-php-plus-codeigniter-mo-ni-yu-fu-wu-qi-de-jiao-hu/"/>
    <updated>2014-04-20T02:20:00+08:00</updated>
    <id>http://youger.github.io/blog/2014/04/20/apache-plus-mysql-plus-php-plus-codeigniter-mo-ni-yu-fu-wu-qi-de-jiao-hu</id>
    <content type="html"><![CDATA[<h2 id="section">为什么</h2>

<p>最近接手一个项目，看demo算不上复杂，基本功能就是从服务器获取数据然后展示出来。以前做过类似的app，当时由于初次做这类前端和后端一块开发的项目，后端的进度直接影响了前端开发，导致留给我们这边开发和测试的时间都很紧，bug也肯定是层出不穷，最后勉强上线。</p>

<h2 id="section-1">怎么做</h2>

<p>这次为了避免上次出现的窘况，决定前端后端一块搞。这里的意思并不是自己开发一个后台，首先对于菜鸟来说不现实，其次这时间也不允我这么搞。这里只是搭建个能返回测试数据的服务器。首先和后端的定好数据格式以及所需的接口，然后就是解决怎么模拟与服务器的交互问题。一通google，大致有两种方案：</p>

<ol>
  <li>利用测试框架写测试用例</li>
  <li>搭建自己到服务器，返回需要的json或者xml</li>
</ol>

<p>最终选择Apache＋PHP＋MySQL。本以为可以傻瓜式直接装<a href="http://www.mamp.info/en/">MAMP</a>，结果安装到最后一步总是失败，试了各种方法<a href="http://forum.mamp.info/viewtopic.php?f=2&amp;t=86116&amp;p=104773&amp;hilit=mavericks#p104773">🔗</a>,<a href="http://www.gladdy.co.uk/blog/2013/06/16/mamp-pro-under-os-x-mavericks/">🔗</a>也没有解决问题，无意间看到这片<a href="http://jason.pureconcepts.net/2012/10/install-apache-php-mysql-mac-os-x/">博文</a>,简略记录一下。</p>

<p>本文教程适用于第一次在Mac OS X Mavericks上安装Apache, PHP, 和 MySQL，或者从已经存在的版本更新到Mavericks。</p>

<p>因为Mac OS X 运行在 UNIX上，所以安装这些就相对容易很多，除此之外，系统缺省又包含了 Apache 和 PHP ，只需安装MySQL，然后简单使他们都处于开启状态。</p>

<p>首先在终端中切换到<code>root</code>，避免因为权限问题使以下命令不能正常运行</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo su -</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="apache">启动Apache</h5>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">apachectl start</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>打开<a href="http://localhost">http://localhost</a>测试 It works!</p>

<h5 id="php">打开PHP</h5>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[译]为视图控制器减重]]></title>
    <link href="http://youger.github.io/blog/2013/11/28/wei-shi-tu-kong-zhi-qi-jian-zhong/"/>
    <updated>2013-11-28T12:10:00+08:00</updated>
    <id>http://youger.github.io/blog/2013/11/28/wei-shi-tu-kong-zhi-qi-jian-zhong</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://www.objc.io/issue-1/lighter-view-controllers.html">链接</a></p>

<p>原文作者：<a href="http://twitter.com/chriseidhof">Chris Eidhof</a></p>

<p>在iOS项目中ViewController经常是最大的文件，而且还包含了很多不必须的代码。不仅如此，在整个项目中ViewController还常常是代码复用最少的部分。接下来我们学习一下为ViewController减重的技巧，提高代码的可重用性，把代码放置更恰当的位置。</p>

<h2 id="data-sourceprotocols">分离数据源(Data Source)和其他协议(Protocols)</h2>

<p>把UITableViewDataSource部分从你的代码中挪到它自己的类里。假如你不止一次的这样做，你将开始接触设计模式和为此创建可复用的类。</p>

<p>例如，在我们的<a href="https://github.com/objcio/issue-1-lighter-view-controllers">例子</a>中PhotosViewController类有下面的方法：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>title:PotosViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="cp">#pragma mark Pragma </span>
</span><span class="line">
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="n">Photo</span><span class="o">*</span><span class="p">)</span><span class="nf">photoAtIndexPath:</span><span class="p">(</span><span class="n">NSIndexPath</span><span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="n">photos</span><span class="p">[(</span><span class="n">NSUInteger</span><span class="p">)</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">];</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">tableView:</span><span class="p">(</span><span class="n">UITableView</span><span class="o">*</span><span class="p">)</span><span class="nv">tableView</span>
</span><span class="line"> <span class="nf">numberOfRowsInSection:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">section</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="n">photos</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="n">UITableViewCell</span><span class="o">*</span><span class="p">)</span><span class="nf">tableView:</span><span class="p">(</span><span class="n">UITableView</span><span class="o">*</span><span class="p">)</span><span class="nv">tableView</span>
</span><span class="line">        <span class="nf">cellForRowAtIndexPath:</span><span class="p">(</span><span class="n">NSIndexPath</span><span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span> <span class="p">{</span>
</span><span class="line">    <span class="n">PhotoCell</span><span class="o">*</span> <span class="n">cell</span> <span class="o">=</span> <span class="p">[</span><span class="n">tableView</span> <span class="nl">dequeueReusableCellWithIdentifier:</span><span class="n">PhotoCellIdentifier</span>
</span><span class="line">                                                      <span class="nl">forIndexPath:</span><span class="n">indexPath</span><span class="p">];</span>
</span><span class="line">    <span class="n">Photo</span><span class="o">*</span> <span class="n">photo</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">photoAtIndexPath:</span><span class="n">indexPath</span><span class="p">];</span>
</span><span class="line">    <span class="n">cell</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">photo</span><span class="p">.</span><span class="n">name</span><span class="p">;</span>
</span><span class="line">    <span class="k">return</span> <span class="n">cell</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这些代码中许多都和数组有关，其中一些提供ViewController管理的照片。那么让我们试一下把和数组相关的代码挪到它自己的类中。我们通过块(block)来配置cell(也可以通过委托(delegate)来设置，取决于你自己的情况和偏好)。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>title:ArrayDataSource.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="k">@implementation</span> <span class="nc">ArrayDataSource</span>
</span><span class="line">
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">itemAtIndexPath:</span><span class="p">(</span><span class="n">NSIndexPath</span><span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="n">items</span><span class="p">[(</span><span class="n">NSUInteger</span><span class="p">)</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">];</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">tableView:</span><span class="p">(</span><span class="n">UITableView</span><span class="o">*</span><span class="p">)</span><span class="nv">tableView</span>
</span><span class="line"> <span class="nf">numberOfRowsInSection:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">section</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="n">items</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="n">UITableViewCell</span><span class="o">*</span><span class="p">)</span><span class="nf">tableView:</span><span class="p">(</span><span class="n">UITableView</span><span class="o">*</span><span class="p">)</span><span class="nv">tableView</span>
</span><span class="line">        <span class="nf">cellForRowAtIndexPath:</span><span class="p">(</span><span class="n">NSIndexPath</span><span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span> <span class="p">{</span>
</span><span class="line">    <span class="kt">id</span> <span class="n">cell</span> <span class="o">=</span> <span class="p">[</span><span class="n">tableView</span> <span class="nl">dequeueReusableCellWithIdentifier:</span><span class="n">cellIdentifier</span>
</span><span class="line">                                              <span class="nl">forIndexPath:</span><span class="n">indexPath</span><span class="p">];</span>
</span><span class="line">    <span class="kt">id</span> <span class="n">item</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">itemAtIndexPath:</span><span class="n">indexPath</span><span class="p">];</span>
</span><span class="line">    <span class="n">configureCellBlock</span><span class="p">(</span><span class="n">cell</span><span class="p">,</span><span class="n">item</span><span class="p">);</span>
</span><span class="line">    <span class="k">return</span> <span class="n">cell</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>你可以创建这个对象的实例，把它作为表格视图的数据源来取代在你ViewController的那三个方法</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">configureCell</span><span class="p">)(</span><span class="n">PhotoCell</span><span class="o">*</span><span class="p">,</span> <span class="n">Photo</span><span class="o">*</span><span class="p">)</span> <span class="o">=</span> <span class="o">^</span><span class="p">(</span><span class="n">PhotoCell</span><span class="o">*</span> <span class="n">cell</span><span class="p">,</span> <span class="n">Photo</span><span class="o">*</span> <span class="n">photo</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">   <span class="n">cell</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">photo</span><span class="p">.</span><span class="n">name</span><span class="p">;</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="n">photosArrayDataSource</span> <span class="o">=</span> <span class="p">[[</span><span class="n">ArrayDataSource</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithItems:</span><span class="n">photos</span>
</span><span class="line">                                                <span class="nl">cellIdentifier:</span><span class="n">PhotoCellIdentifier</span>
</span><span class="line">                                            <span class="nl">configureCellBlock:</span><span class="n">configureCell</span><span class="p">];</span>
</span><span class="line"><span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">dataSource</span> <span class="o">=</span> <span class="n">photosArrayDataSource</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>现在你不用在考虑筹划索引路径(index path)在数组中的位置，每次你想要在表视图中展示一个数组的内容你都可以重用这部分代码。你还可以额外实现像<code>tableView:commitEditingStyle:forRowAtIndexPath: </code>这样的方法，在你的ViewController中共用这些代码。</p>

<p>美妙的是你可以单独的测试这个类而不用考虑重新在写。假如数据不是数组这个方法同样适用。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Key-Value Observing]]></title>
    <link href="http://youger.github.io/blog/2013/11/27/key-value-observing/"/>
    <updated>2013-11-27T17:08:00+08:00</updated>
    <id>http://youger.github.io/blog/2013/11/27/key-value-observing</id>
    <content type="html"><![CDATA[<p>译自<a href="http://nshipster.com/key-value-observing/">NSHipster</a></p>

<p>任何接触过NSBlock几次的人</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS应用崩溃日志揭秘]]></title>
    <link href="http://youger.github.io/blog/2013/11/11/iosying-yong-beng-kui-ri-zhi-jie-mi/"/>
    <updated>2013-11-11T10:49:00+08:00</updated>
    <id>http://youger.github.io/blog/2013/11/11/iosying-yong-beng-kui-ri-zhi-jie-mi</id>
    <content type="html"><![CDATA[<p>最近收到用户反馈说新版本词典存在闪退问题，和PM各种测试也没发现闪退，苹果后台也确实收集到一些crash的报告，借此机会打算手动去分析下已有的崩溃日志报告，打开这些<code>.crash</code>文
件，满篇天书，Google了一下还是找到有不少关于分析崩溃报告的教程，参考RW<a href="http://www.raywenderlich.com/zh-hans/30818/ios应用崩溃日志揭秘">iOS应用崩溃日志揭秘</a>，
教程。
后来通过这篇<a href="http://blog.devtang.com/blog/2013/07/24/use-crashlytics/">博文</a>了解到<a href="http://try.crashlytics.com">crashlytics</a>,在线收集用
户的crash log的工具。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[由来]]></title>
    <link href="http://youger.github.io/blog/2013/10/18/you-lai/"/>
    <updated>2013-10-18T14:06:00+08:00</updated>
    <id>http://youger.github.io/blog/2013/10/18/you-lai</id>
    <content type="html"><![CDATA[<p>Fser。</p>

<p><a href="http://beyondvincent.com/blog/2013/08/03/108-creating-a-github-blog-using-octopress/">参考</a></p>
]]></content>
  </entry>
  
</feed>
